{"version":3,"sources":["index.js"],"names":["colors","startYear","numberWithCommas","x","toString","replace","Tooltip","props","state","displayTooltip","hideTooltip","bind","showTooltip","this","setState","message","position","regnum","currency","className","onMouseLeave","onMouseOver","children","React","Component","Tile","bin","value","bins","style","gridColumnStart","column","gridColumnEnd","gridRowStart","row","gridRowEnd","backgroundColor","region","color","reg_abbr","Legend","id","Object","keys","slice","map","d","i","num","data","legend","Map","year","_","renderTile","renderTiles","GetMap","Chart","defyear","years","Array","from","length","event","target","renderLegend","type","min","max","list","onChange","handleChange","step","renderTiks","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d24dd986.chunk.js","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport data from './data.json';\n\nconst colors = {\n  \"b0\": \"#E2E2E6\",\n  \"b1\": \"#f2e7fe\",\n  \"b2\": \"#dfc5ff\",\n  \"b3\": \"#caa3ff\",\n  \"b4\": \"#b381ff\",\n  \"b5\": \"#985eff\",\n  \"b6\": \"#673ab7\"\n};\n\nconst startYear = 1998;\n\nfunction numberWithCommas(x) {\n\n  if (x) {\n    return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \" \");\n  } else {\n    return \"\"\n  }\n}\n\nclass Tooltip extends React.Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      displayTooltip: false\n    }\n    this.hideTooltip = this.hideTooltip.bind(this)\n    this.showTooltip = this.showTooltip.bind(this)\n  }\n  \n  hideTooltip () {\n    this.setState({displayTooltip: false})\n    \n  }\n  showTooltip () {\n    this.setState({displayTooltip: true})\n  }\n\n  render() {\n    let message = this.props.message,\n        position = this.props.position,\n        regnum = this.props.regnum,\n        currency = this.props.currency;\n    return (\n      <span className='tooltip'\n          onMouseLeave={this.hideTooltip}\n        >\n        {this.state.displayTooltip &&\n        <div className={`tooltip-bubble tooltip-${position}`}>\n          <div className='tooltip-message'><b>{message}</b> <br /> {regnum} {currency}</div>\n        </div>\n        }\n        <span \n          className='tooltip-trigger'\n          onMouseOver={this.showTooltip}\n          >\n          {this.props.children}\n        </span>\n      </span>\n    )\n  }\n}\n\nclass Tile extends React.Component {\n  render() {\n  \n  let bin = \"b\"+this.props.value.bins,\n      regnum = numberWithCommas(this.props.value.value);\n\n  return (\n    <div\n        style={{\n            gridColumnStart: this.props.value.column,\n            gridColumnEnd: this.props.value.column+1,\n            gridRowStart: this.props.value.row,\n            gridRowEnd: this.props.value.row+1,\n            backgroundColor: colors[bin]\n        }}\n    >\n      \n      <Tooltip \n        message={this.props.value.region} \n        position={ this.props.value.column > 10 ? \"left\" : \"right\" } \n        regnum={regnum}\n        currency={this.props.value.currency}>\n\n        <div className='tile'>\n          <div \n            className='regAbbr' \n            style={{color: bin === \"b6\" | bin === \"b5\" ? \"#E2E2E6\" : \"#3E3E59\"}}\n          >\n            {this.props.value.reg_abbr}\n          </div>\n        </div>\n\n      </Tooltip>\n    </div>\n    );\n}}\n\nclass Legend extends React.Component {\n  render() {\n  return (\n    <div id=\"legend\">\n      {Object.keys(colors).slice(1,).map((d, i) => {\n          let num = data.legend[this.props.value][i+1].value;\n\n          return (\n              <div style={{backgroundColor: colors[d]}}>\n                <div className=\"legendTile\">\n                  {numberWithCommas(num)}\n                </div>\n              </div>\n          )\n      })}\n    </div>\n    );\n}}\n\nclass Map extends React.Component {\n  constructor(props) {\n      super(props);\n      this.state = {\n        data: data.data\n      };\n  }\n\n  renderTile(d) {\n    return <Tile value={d} />;\n  }\n\n  renderTiles(year) {\n    return (\n      <div id=\"maprf\">\n        {this.state.data[year].map((d, _) => {\n          return (\n              this.renderTile(d)\n          )\n        })}\n        <div id='bigNumber'>\n          <h1>{year}</h1>\n        </div>\n      </div>\n  )}\n\n  render() {\n    return(\n      this.renderTiles(this.props.year)\n    )\n  }\n\n}\n\nfunction GetMap(props) {\n  return (\n    <div id=\"container\">\n      <Map year={props.year} />\n    </div>\n  )\n}\n\nclass Chart extends React.Component {\n  constructor(props) {\n      super(props);\n      this.state = {\n        defyear: startYear,\n        data: data.data,\n        years: Array.from({ length: 2019 - startYear + 1 }, (_, i) => i+startYear)\n      };\n  }\n\n  renderLegend(year) {\n      return <Legend value={year} />\n  }\n\n  renderTiks(years) {\n    return (\n      years.map((d, i) => {\n        if (i===0 | i===years.length-1) {\n          return ( <p>{d}</p> )\n        } else {\n          return ( <p>'</p> )\n        }\n      })\n    )\n  }\n\n  handleChange(event) {\n    this.setState({defyear: event.target.value});\n  }\n\n  render() {\n      return (\n          <div id=\"mainContainer\">\n            <h1>Валовой региональный продукт <br /> на душу населения</h1>\n            <GetMap year={this.state.defyear} />\n            {this.renderLegend(this.state.defyear)}\n            <div id='inputContainer'>\n            <input\n              id='input'\n              type='range'\n              min={startYear} max='2019'\n              list=\"steplist\"\n              onChange={(event) => this.handleChange(event)}\n            step='1'/>\n            <div className=\"sliderticks\" id=\"sliderticks\">\n                {this.renderTiks(this.state.years)}\n            </div>\n            </div>\n          </div>\n      );\n}}\n\nReactDOM.render(<Chart />, document.getElementById(\"root\"));\n"],"sourceRoot":""}