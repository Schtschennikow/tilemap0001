{"version":3,"sources":["index.js"],"names":["colors","Tooltip","children","title","position","className","Tile","bin","this","props","value","bins","style","gridColumnStart","column","gridColumnEnd","gridRowStart","row","gridRowEnd","backgroundColor","region","color","reg_abbr","React","Component","Legend","id","Object","keys","slice","map","d","i","x","num","data","legend","toString","replace","Chart","state","defyear","year","_","renderTile","event","setState","target","renderTiles","renderLegend","type","min","max","onChange","handleChange","step","ReactDOM","render","document","getElementById"],"mappings":"8j2cAKMA,EAAS,CACb,GAAM,UACN,GAAM,UACN,GAAM,UACN,GAAM,UACN,GAAM,UACN,GAAM,UACN,GAAM,WAcR,SAASC,EAAT,GAAiD,IAA9BC,EAA6B,EAA7BA,SAAUC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,SAClC,OACE,qBAAKC,UAAS,UAAa,gBAAeD,EAAU,gBAAeD,EAAnE,SACGD,I,IAKDI,E,4JACJ,WAEA,IAAIC,EAAM,IAAIC,KAAKC,MAAMC,MAAMC,KAG/B,OACE,qBACIC,MAAO,CACHC,gBAAiBL,KAAKC,MAAMC,MAAMI,OAClCC,cAAeP,KAAKC,MAAMC,MAAMI,OAAO,EACvCE,aAAcR,KAAKC,MAAMC,MAAMO,IAC/BC,WAAYV,KAAKC,MAAMC,MAAMO,IAAI,EACjCE,gBAAiBnB,EAAOO,IANhC,SASE,cAACN,EAAD,CAASE,MAAOK,KAAKC,MAAMC,MAAMU,OAAQhB,SAAS,OAAlD,SACE,qBACEC,UAAU,UACVO,MAAO,CAACS,MAAc,MAAPd,EAAqB,MAAPA,EAAc,UAAY,WAFzD,SAIGC,KAAKC,MAAMC,MAAMY,mB,GArBTC,IAAMC,WA4BnBC,E,4JACJ,WAAU,IAAD,OACT,OACE,qBAAKC,GAAG,SAAR,SACGC,OAAOC,KAAK5B,GAAQ6B,MAAM,GAAIC,KAAI,SAACC,EAAGC,GACnC,IAlDgBC,EAkDZC,EAAMC,EAAKC,OAAO,EAAK3B,MAAMC,OAAOsB,EAAE,GAAGtB,MAE7C,OACI,qBAAKE,MAAO,CAACO,gBAAiBnB,EAAO+B,IAArC,SACE,qBAAK1B,UAAU,aAAf,UAtDU4B,EAuDUC,EArD9BD,EACKA,EAAEI,WAAWC,QAAQ,wBAAyB,UAE9C,iB,GAwCUf,IAAMC,WAmBrBe,E,kDACJ,WAAY9B,GAAQ,IAAD,8BACf,cAAMA,IACD+B,MAAQ,CACXC,QAtEU,KAuEVN,KAAMA,EAAKA,MAJE,E,gDAQnB,SAAaO,GACT,OAAO,cAACjB,EAAD,CAAQf,MAAOgC,M,wBAG1B,SAAWX,GACP,OAAO,cAACzB,EAAD,CAAMI,MAAOqB,M,yBAGxB,SAAYW,GAAO,IAAD,OAChB,OACE,qBAAKhB,GAAG,QAAR,SACGlB,KAAKgC,MAAML,KAAKO,GAAMZ,KAAI,SAACC,EAAGY,GAC7B,OACI,EAAKC,WAAWb,U,0BAM5B,SAAac,GACXrC,KAAKsC,SAAS,CAACL,QAASI,EAAME,OAAOrC,U,oBAGvC,WAAU,IAAD,OACL,OACI,sBAAKgB,GAAG,YAAR,UACE,6RACClB,KAAKwC,YAAYxC,KAAKgC,MAAMC,SAC5BjC,KAAKyC,aAAazC,KAAKgC,MAAMC,SAC9B,uBACEf,GAAG,QACHwB,KAAK,QACLC,IA3GI,KA2GYC,IAAI,OACpBC,SAAU,SAACR,GAAD,OAAW,EAAKS,aAAaT,IACzCU,KAAK,a,GA3CGhC,IAAMC,WAgD1BgC,IAASC,OAAO,cAAClB,EAAD,IAAWmB,SAASC,eAAe,W","file":"static/js/main.d81230a4.chunk.js","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport data from './data.json'\n\nconst colors = {\n  \"b0\": \"#E2E2E6\",\n  \"b1\": \"#f2e7fe\",\n  \"b2\": \"#dfc5ff\",\n  \"b3\": \"#caa3ff\",\n  \"b4\": \"#b381ff\",\n  \"b5\": \"#985eff\",\n  \"b6\": \"#673ab7\"\n};\n\nconst startYear = 1998;\n\nfunction numberWithCommas(x) {\n\n  if (x) {\n    return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \" \");\n  } else {\n    return \"\"\n  }\n}\n\nfunction Tooltip({ children, title, position }) {\n  return (\n    <div className={`tooltip`} data-position={position} data-tool-tip={title}>\n      {children}\n    </div>\n  );\n}\n\nclass Tile extends React.Component {\n  render() {\n  \n  let bin = \"b\"+this.props.value.bins;\n      // regnum = numberWithCommas(this.props.value.value);\n\n  return (\n    <div\n        style={{\n            gridColumnStart: this.props.value.column,\n            gridColumnEnd: this.props.value.column+1,\n            gridRowStart: this.props.value.row,\n            gridRowEnd: this.props.value.row+1,\n            backgroundColor: colors[bin]\n        }}\n    >\n      <Tooltip title={this.props.value.region} position='left'>\n        <div \n          className='regAbbr' \n          style={{color: bin == \"b6\" | bin == \"b5\" ? \"#E2E2E6\" : \"#3E3E59\"}}\n        >\n          {this.props.value.reg_abbr}\n        </div>\n      </Tooltip>\n    </div>\n    );\n}}\n\nclass Legend extends React.Component {\n  render() {\n  return (\n    <div id=\"legend\">\n      {Object.keys(colors).slice(1,).map((d, i) => {\n          let num = data.legend[this.props.value][i+1].value;\n\n          return (\n              <div style={{backgroundColor: colors[d]}}>\n                <div className=\"legendTile\">\n                  {numberWithCommas(num)}\n                </div>\n              </div>\n          )\n      })}\n    </div>\n    );\n}}\n\nclass Chart extends React.Component {\n  constructor(props) {\n      super(props);\n      this.state = {\n        defyear: startYear,\n        data: data.data,\n      };\n  }\n\n  renderLegend(year) {\n      return <Legend value={year} />\n  }\n\n  renderTile(d) {\n      return <Tile value={d} />;\n  }\n\n  renderTiles(year) {\n    return (\n      <div id=\"maprf\">\n        {this.state.data[year].map((d, _) => {\n          return (\n              this.renderTile(d)\n          )\n        })}\n      </div>\n  )}\n\n  handleChange(event) {\n    this.setState({defyear: event.target.value});\n  }\n\n  render() {\n      return (\n          <div id=\"container\"> \n            <h1>Валовой региональный продукт на душу населения</h1>\n            {this.renderTiles(this.state.defyear)}\n            {this.renderLegend(this.state.defyear)}\n            <input\n              id='input'\n              type='range'\n              min={startYear} max='2019'\n              onChange={(event) => this.handleChange(event)}\n            step='1'/>\n          </div>\n      );\n}}\n\nReactDOM.render(<Chart />, document.getElementById(\"root\"));\n"],"sourceRoot":""}